import React from 'react';
import { RiskLevel } from '../types';

interface ResultDisplayProps {
  level: RiskLevel;
  onReset: () => void;
}

const SafeIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" className="h-16 w-16 text-green-500" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
    </svg>
);

const MediumRiskIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" className="h-16 w-16 text-yellow-500" viewBox="0 0 24 24" fill="currentColor">
        <path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2V7h2v7z"/>
    </svg>
);

const HighRiskIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" className="h-16 w-16 text-red-600" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm-1 14h2v2h-2zm0-6h2v4h-2z"/>
    </svg>
);

const LinkIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2 inline" viewBox="0 0 20 20" fill="currentColor">
        <path fillRule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clipRule="evenodd" />
    </svg>
);

const getResultContent = (level: RiskLevel) => {
  switch (level) {
    case RiskLevel.SAFE:
      return {
        bgColor: 'bg-green-50',
        borderColor: 'border-green-500',
        icon: <SafeIcon />,
        title: 'M·ª©c ƒë·ªô An to√†n: T·ªêT üü¢ (0-5 ƒëi·ªÉm)',
        message: 'Tuy·ªát v·ªùi! B·∫°n c√≥ nh·∫≠n th·ª©c v√† h√†nh vi t·ªët v·ªÅ an to√†n tr√™n kh√¥ng gian m·∫°ng. H√£y ti·∫øp t·ª•c duy tr√¨ v√† chia s·∫ª nh·ªØng ki·∫øn th·ª©c n√†y cho b·∫°n b√®, ng∆∞·ªùi th√¢n.',
        recommendations: null,
      };
    case RiskLevel.MEDIUM_RISK:
      return {
        bgColor: 'bg-yellow-50',
        borderColor: 'border-yellow-500',
        icon: <MediumRiskIcon />,
        title: 'M·ª©c ƒë·ªô R·ªßi ro: TRUNG B√åNH üü° (6-15 ƒëi·ªÉm)',
        message: 'B·∫°n c√≥ m·ªôt v√†i h√†nh vi ho·∫∑c nh·∫≠n th·ª©c ti·ªÅm ·∫©n r·ªßi ro. K·∫ª x·∫•u c√≥ th·ªÉ l·ª£i d·ª•ng nh·ªØng s∆° h·ªü n√†y. H√£y c·∫©n tr·ªçng h∆°n v√† trang b·ªã th√™m ki·∫øn th·ª©c:',
        recommendations: (
          <ul className="space-y-3 mt-4 text-left">
            <li><a href="https://baochinhphu.vn/tim-kiem/an-toan-thong-tin.html" target="_blank" rel="noopener noreferrer" className="font-semibold text-blue-700 hover:underline flex items-center"><LinkIcon />B√°o Ch√≠nh Ph·ªß - Chuy√™n m·ª•c An to√†n th√¥ng tin</a></li>
            <li><a href="https://tinnhiemmang.vn/" target="_blank" rel="noopener noreferrer" className="font-semibold text-blue-700 hover:underline flex items-center"><LinkIcon />C·ªïng kh√¥ng gian m·∫°ng qu·ªëc gia (T√≠n nhi·ªám m·∫°ng)</a></li>
          </ul>
        ),
      };
    case RiskLevel.HIGH_RISK:
      return {
        bgColor: 'bg-red-50',
        borderColor: 'border-red-500',
        icon: <HighRiskIcon />,
        title: 'C·∫¢NH B√ÅO NGUY C∆† R·∫§T CAO üî¥ (16-30 ƒëi·ªÉm)',
        message: 'B·∫°n ƒëang c√≥ nh·ªØng h√†nh vi v√† nh·∫≠n th·ª©c ·ªü m·ª©c b√°o ƒë·ªông, r·∫•t d·ªÖ tr·ªü th√†nh m·ª•c ti√™u c·ªßa l·ª´a ƒë·∫£o, d·ª• d·ªó, ho·∫∑c "b·∫Øt c√≥c online".',
        recommendations: (
          <>
            <div className="mt-4 text-left bg-red-100 p-5 rounded-lg border-l-4 border-red-600">
                <p className="text-lg font-extrabold text-red-900">KHUY·∫æN C√ÅO KH·∫®N C·∫§P:</p>
                <ul className="mt-2 list-disc list-inside space-y-2 text-red-800 font-semibold">
                  <li><span className="font-bold">TUY·ªÜT ƒê·ªêI</span> kh√¥ng th·ª±c hi·ªán b·∫•t k·ª≥ y√™u c·∫ßu chuy·ªÉn ti·ªÅn ho·∫∑c t·ª± c√°ch ly n√†o.</li>
                  <li><span className="font-bold">KH√îNG</span> tin v√†o c√°c l·ªùi ƒëe d·ªça qua ƒëi·ªán tho·∫°i, tin nh·∫Øn.</li>
                  <li><span className="font-bold">LI√äN H·ªÜ NGAY L·∫¨P T·ª®C</span> v·ªõi ng∆∞·ªùi th√¢n tin c·∫≠y v√† b√°o cho c∆° quan C√¥ng an g·∫ßn nh·∫•t ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.</li>
                </ul>
            </div>
             <p className="mt-6 text-left font-bold text-slate-800">Xem c·∫£nh b√°o ch√≠nh th·ª©c v√† t√¨m hi·ªÉu c√°c chi√™u th·ª©c l·ª´a ƒë·∫£o t·∫°i:</p>
            <ul className="space-y-3 mt-2 text-left">
                <li><a href="https://bocongan.gov.vn/tim-kiem/tag/canh-bao-toi-pham.html" target="_blank" rel="noopener noreferrer" className="font-semibold text-blue-700 hover:underline flex items-center"><LinkIcon />C·ªïng th√¥ng tin ƒëi·ªán t·ª≠ B·ªô C√¥ng An</a></li>
                 <li><a href="https://chongluadao.vn/" target="_blank" rel="noopener noreferrer" className="font-semibold text-blue-700 hover:underline flex items-center"><LinkIcon />D·ª± √°n Ch·ªëng L·ª´a ƒê·∫£o (Anti-Phishing)</a></li>
            </ul>
          </>
        ),
      };
    default:
      return null;
  }
};

export const ResultDisplay: React.FC<ResultDisplayProps> = ({ level, onReset }) => {
  const content = getResultContent(level);

  if (!content) return null;

  return (
    <div className={`text-center p-6 sm:p-8 rounded-2xl border-2 shadow-xl ${content.bgColor} ${content.borderColor}`}>
      <div className="flex justify-center mb-4">{content.icon}</div>
      <h2 className="text-2xl sm:text-3xl font-extrabold text-slate-900">{content.title}</h2>
      <p className="mt-3 text-slate-700 max-w-2xl mx-auto text-base sm:text-lg">{content.message}</p>
      {content.recommendations && <div className="mt-6 max-w-2xl mx-auto">{content.recommendations}</div>}
      <div className="mt-8">
        <button
            onClick={onReset}
            className="px-8 py-3 font-semibold text-slate-700 bg-white border-2 border-slate-300 rounded-lg hover:bg-slate-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-400 transition-colors shadow-sm"
        >
            L√†m l·∫°i b√†i tr·∫Øc nghi·ªám
        </button>
      </div>
    </div>
  );
};